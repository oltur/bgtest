{"D:\\Projects\\_BorderGuru\\ts\\src\\app.ts": {"path":"D:\\Projects\\_BorderGuru\\ts\\src\\app.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":42}},"3":{"start":{"line":5,"column":19},"end":{"line":5,"column":41}},"4":{"start":{"line":6,"column":15},"end":{"line":6,"column":32}},"5":{"start":{"line":7,"column":14},"end":{"line":7,"column":30}},"6":{"start":{"line":8,"column":15},"end":{"line":8,"column":32}},"7":{"start":{"line":9,"column":14},"end":{"line":9,"column":38}},"8":{"start":{"line":10,"column":14},"end":{"line":10,"column":38}},"9":{"start":{"line":11,"column":13},"end":{"line":11,"column":28}},"10":{"start":{"line":12,"column":17},"end":{"line":12,"column":36}},"11":{"start":{"line":13,"column":17},"end":{"line":13,"column":36}},"12":{"start":{"line":14,"column":25},"end":{"line":14,"column":53}},"13":{"start":{"line":15,"column":17},"end":{"line":15,"column":36}},"14":{"start":{"line":16,"column":19},"end":{"line":16,"column":33}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":32}},"16":{"start":{"line":20,"column":23},"end":{"line":20,"column":52}},"17":{"start":{"line":21,"column":24},"end":{"line":21,"column":54}},"18":{"start":{"line":23,"column":12},"end":{"line":23,"column":21}},"19":{"start":{"line":25,"column":17},"end":{"line":25,"column":139}},"20":{"start":{"line":26,"column":0},"end":{"line":26,"column":28}},"21":{"start":{"line":27,"column":0},"end":{"line":30,"column":3}},"22":{"start":{"line":28,"column":4},"end":{"line":28,"column":89}},"23":{"start":{"line":32,"column":0},"end":{"line":32,"column":42}},"24":{"start":{"line":33,"column":0},"end":{"line":33,"column":51}},"25":{"start":{"line":34,"column":0},"end":{"line":34,"column":30}},"26":{"start":{"line":36,"column":0},"end":{"line":36,"column":23}},"27":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}},"28":{"start":{"line":38,"column":0},"end":{"line":38,"column":51}},"29":{"start":{"line":39,"column":0},"end":{"line":39,"column":28}},"30":{"start":{"line":40,"column":0},"end":{"line":48,"column":4}},"31":{"start":{"line":49,"column":0},"end":{"line":49,"column":31}},"32":{"start":{"line":50,"column":0},"end":{"line":50,"column":28}},"33":{"start":{"line":51,"column":0},"end":{"line":51,"column":17}},"34":{"start":{"line":52,"column":0},"end":{"line":52,"column":36}},"35":{"start":{"line":53,"column":0},"end":{"line":53,"column":35}},"36":{"start":{"line":54,"column":0},"end":{"line":57,"column":3}},"37":{"start":{"line":55,"column":4},"end":{"line":55,"column":31}},"38":{"start":{"line":56,"column":4},"end":{"line":56,"column":11}},"39":{"start":{"line":58,"column":0},"end":{"line":58,"column":81}},"40":{"start":{"line":62,"column":0},"end":{"line":62,"column":35}},"41":{"start":{"line":66,"column":0},"end":{"line":66,"column":64}},"42":{"start":{"line":67,"column":0},"end":{"line":67,"column":52}},"43":{"start":{"line":68,"column":0},"end":{"line":68,"column":54}},"44":{"start":{"line":69,"column":0},"end":{"line":69,"column":50}},"45":{"start":{"line":70,"column":0},"end":{"line":70,"column":58}},"46":{"start":{"line":71,"column":0},"end":{"line":71,"column":50}},"47":{"start":{"line":72,"column":0},"end":{"line":72,"column":68}},"48":{"start":{"line":73,"column":0},"end":{"line":73,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":27,"column":58},"end":{"line":27,"column":59}},"loc":{"start":{"line":27,"column":64},"end":{"line":27,"column":67}},"line":27},"1":{"name":"(anonymous_1)","decl":{"start":{"line":27,"column":75},"end":{"line":27,"column":76}},"loc":{"start":{"line":27,"column":82},"end":{"line":30,"column":1}},"line":27},"2":{"name":"(anonymous_2)","decl":{"start":{"line":54,"column":8},"end":{"line":54,"column":9}},"loc":{"start":{"line":54,"column":28},"end":{"line":57,"column":1}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":17},"end":{"line":25,"column":139}},"type":"cond-expr","locations":[{"start":{"line":25,"column":51},"end":{"line":25,"column":107}},{"start":{"line":25,"column":110},"end":{"line":25,"column":139}}],"line":25},"1":{"loc":{"start":{"line":25,"column":51},"end":{"line":25,"column":107}},"type":"binary-expr","locations":[{"start":{"line":25,"column":51},"end":{"line":25,"column":74}},{"start":{"line":25,"column":78},"end":{"line":25,"column":107}}],"line":25},"2":{"loc":{"start":{"line":32,"column":16},"end":{"line":32,"column":40}},"type":"binary-expr","locations":[{"start":{"line":32,"column":16},"end":{"line":32,"column":32}},{"start":{"line":32,"column":36},"end":{"line":32,"column":40}}],"line":32}},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":3,"22":0,"23":3,"24":3,"25":3,"26":3,"27":3,"28":3,"29":3,"30":3,"31":3,"32":3,"33":3,"34":3,"35":3,"36":3,"37":18,"38":18,"39":3,"40":3,"41":3,"42":3,"43":3,"44":3,"45":3,"46":3,"47":3,"48":3},"f":{"0":3,"1":0,"2":18},"b":{"0":[0,3],"1":[0,0],"2":[3,3]},"inputSourceMap":{"version":3,"file":"app.js","sourceRoot":"","sources":["app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as express from \"express\";\r\nimport * as compression from \"compression\";  // compresses requests\r\nimport * as session from \"express-session\";\r\nimport * as bodyParser from \"body-parser\";\r\nimport * as logger from \"morgan\";\r\nimport * as lusca from \"lusca\";\r\nimport * as dotenv from \"dotenv\";\r\nimport * as mongo from \"connect-mongo\";\r\nimport * as flash from \"express-flash\";\r\nimport * as path from \"path\";\r\nimport * as mongoose from \"mongoose\";\r\nimport * as passport from \"passport\";\r\nimport * as expressValidator from \"express-validator\";\r\nimport * as bluebird from \"bluebird\";\r\n\r\nconst MongoStore = mongo(session);\r\n\r\n// Load environment variables from .env file, where API keys and passwords are configured\r\ndotenv.config({ path: \".env\" });\r\n\r\n// Controllers (route handlers)\r\nimport * as homeController from \"./controllers/home\";\r\nimport * as orderController from \"./controllers/order\";\r\n\r\n\r\n// API keys and Passport configuration\r\nimport * as passportConfig from \"./config/passport\";\r\n\r\n// Create Express server\r\nconst app = express();\r\n\r\n// Connect to MongoDB\r\nconst mongoUrl = process.env.NODE_ENV !== \"test\" ? process.env.MONGODB_URI || \"mongodb://localhost/testing\" : \"mongodb://localhost/testing\";\r\n(<any>mongoose).Promise = bluebird;\r\nmongoose.connect(mongoUrl, { useMongoClient: true }).then(\r\n  () => { /** ready to use. The `mongoose.connect()` promise resolves to undefined. */ },\r\n).catch(err => {\r\n  console.log(\"MongoDB connection error. Please make sure MongoDB is running. \" + err);\r\n  // process.exit();\r\n});\r\n\r\n// Express configuration\r\napp.set(\"port\", process.env.PORT || 3000);\r\napp.set(\"views\", path.join(__dirname, \"../views\"));\r\napp.set(\"view engine\", \"pug\");\r\n// app.use(compression());\r\napp.use(logger(\"dev\"));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(expressValidator());\r\napp.use(session({\r\n  resave: true,\r\n  saveUninitialized: true,\r\n  secret: process.env.SESSION_SECRET,\r\n  store: new MongoStore({\r\n    url: mongoUrl,\r\n    autoReconnect: true\r\n  })\r\n}));\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\napp.use(flash());\r\napp.use(lusca.xframe(\"SAMEORIGIN\"));\r\napp.use(lusca.xssProtection(true));\r\napp.use((req, res, next) => {\r\n  res.locals.user = req.user;\r\n  next();\r\n});\r\n\r\napp.use(express.static(path.join(__dirname, \"public\"), { maxAge: 31557600000 }));\r\n\r\n/**\r\n * Primary app routes.\r\n */\r\napp.get(\"/\", homeController.index);\r\n\r\n/**\r\n * API for Orders.\r\n */\r\napp.post(\"/api/importorders\", orderController.postImportOrders);\r\napp.get(\"/api/order/:id\", orderController.getOrder);\r\napp.get(\"/api/order\", orderController.getOrderSearch);\r\napp.post(\"/api/order\", orderController.postOrder);\r\napp.delete(\"/api/order/:id\", orderController.deleteOrder);\r\napp.patch(\"/api/order\", orderController.putOrder);\r\napp.get(\"/api/ordersCountPerItem\", orderController.getCountPerItem);\r\n\r\n\r\nmodule.exports = app;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"a6aec1ebe7617ce63c7ffbf032e1e71d6ca49f04"}
,"D:\\Projects\\_BorderGuru\\ts\\src\\controllers\\home.ts": {"path":"D:\\Projects\\_BorderGuru\\ts\\src\\controllers\\home.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":7,"column":0},"end":{"line":11,"column":2}},"2":{"start":{"line":8,"column":4},"end":{"line":10,"column":7}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":16},"end":{"line":7,"column":17}},"loc":{"start":{"line":7,"column":30},"end":{"line":11,"column":1}},"line":7}},"branchMap":{},"s":{"0":3,"1":3,"2":1},"f":{"0":1},"b":{},"inputSourceMap":{"version":3,"file":"home.js","sourceRoot":"","sources":["home.ts"],"names":[],"mappings":";;AAEA;;;GAGG;AACQ,QAAA,KAAK,GAAG,CAAC,GAAY,EAAE,GAAa,EAAE,EAAE;IACjD,GAAG,CAAC,MAAM,CAAC,MAAM,EAAE;QACjB,KAAK,EAAE,MAAM;KACd,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import { Request, Response } from \"express\";\r\n\r\n/**\r\n * GET /\r\n * Home page.\r\n */\r\nexport let index = (req: Request, res: Response) => {\r\n  res.render(\"home\", {\r\n    title: \"Home\"\r\n  });\r\n};\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"03f56619099c479e18f463ff3d297add33089046"}
,"D:\\Projects\\_BorderGuru\\ts\\src\\controllers\\order.ts": {"path":"D:\\Projects\\_BorderGuru\\ts\\src\\controllers\\order.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":42}},"3":{"start":{"line":9,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":10,"column":17},"end":{"line":10,"column":19}},"5":{"start":{"line":11,"column":4},"end":{"line":13,"column":7}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":24}},"7":{"start":{"line":14,"column":4},"end":{"line":27,"column":7}},"8":{"start":{"line":16,"column":8},"end":{"line":16,"column":53}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":24}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":24}},"11":{"start":{"line":21,"column":8},"end":{"line":21,"column":24}},"12":{"start":{"line":22,"column":8},"end":{"line":22,"column":34}},"13":{"start":{"line":25,"column":8},"end":{"line":25,"column":19}},"14":{"start":{"line":26,"column":8},"end":{"line":26,"column":15}},"15":{"start":{"line":33,"column":0},"end":{"line":49,"column":2}},"16":{"start":{"line":34,"column":17},"end":{"line":34,"column":25}},"17":{"start":{"line":35,"column":4},"end":{"line":48,"column":7}},"18":{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},"19":{"start":{"line":38,"column":8},"end":{"line":38,"column":24}},"20":{"start":{"line":39,"column":8},"end":{"line":39,"column":24}},"21":{"start":{"line":42,"column":8},"end":{"line":42,"column":24}},"22":{"start":{"line":43,"column":8},"end":{"line":43,"column":34}},"23":{"start":{"line":46,"column":8},"end":{"line":46,"column":19}},"24":{"start":{"line":47,"column":8},"end":{"line":47,"column":15}},"25":{"start":{"line":54,"column":0},"end":{"line":69,"column":2}},"26":{"start":{"line":55,"column":4},"end":{"line":68,"column":7}},"27":{"start":{"line":57,"column":8},"end":{"line":57,"column":66}},"28":{"start":{"line":58,"column":8},"end":{"line":58,"column":24}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":24}},"30":{"start":{"line":62,"column":8},"end":{"line":62,"column":24}},"31":{"start":{"line":63,"column":8},"end":{"line":63,"column":34}},"32":{"start":{"line":66,"column":8},"end":{"line":66,"column":19}},"33":{"start":{"line":67,"column":8},"end":{"line":67,"column":15}},"34":{"start":{"line":74,"column":0},"end":{"line":92,"column":2}},"35":{"start":{"line":75,"column":20},"end":{"line":75,"column":43}},"36":{"start":{"line":76,"column":4},"end":{"line":91,"column":7}},"37":{"start":{"line":78,"column":8},"end":{"line":78,"column":59}},"38":{"start":{"line":79,"column":8},"end":{"line":79,"column":31}},"39":{"start":{"line":80,"column":8},"end":{"line":80,"column":24}},"40":{"start":{"line":81,"column":8},"end":{"line":81,"column":44}},"41":{"start":{"line":82,"column":8},"end":{"line":82,"column":40}},"42":{"start":{"line":85,"column":8},"end":{"line":85,"column":24}},"43":{"start":{"line":86,"column":8},"end":{"line":86,"column":34}},"44":{"start":{"line":89,"column":8},"end":{"line":89,"column":19}},"45":{"start":{"line":90,"column":8},"end":{"line":90,"column":15}},"46":{"start":{"line":97,"column":0},"end":{"line":117,"column":2}},"47":{"start":{"line":98,"column":4},"end":{"line":116,"column":7}},"48":{"start":{"line":100,"column":8},"end":{"line":100,"column":55}},"49":{"start":{"line":101,"column":8},"end":{"line":101,"column":63}},"50":{"start":{"line":102,"column":8},"end":{"line":102,"column":55}},"51":{"start":{"line":103,"column":8},"end":{"line":103,"column":28}},"52":{"start":{"line":106,"column":8},"end":{"line":106,"column":24}},"53":{"start":{"line":107,"column":8},"end":{"line":107,"column":24}},"54":{"start":{"line":110,"column":8},"end":{"line":110,"column":24}},"55":{"start":{"line":111,"column":8},"end":{"line":111,"column":34}},"56":{"start":{"line":114,"column":8},"end":{"line":114,"column":19}},"57":{"start":{"line":115,"column":8},"end":{"line":115,"column":15}},"58":{"start":{"line":123,"column":0},"end":{"line":149,"column":2}},"59":{"start":{"line":124,"column":18},"end":{"line":124,"column":55}},"60":{"start":{"line":125,"column":11},"end":{"line":125,"column":44}},"61":{"start":{"line":126,"column":14},"end":{"line":126,"column":31}},"62":{"start":{"line":126,"column":45},"end":{"line":126,"column":64}},"63":{"start":{"line":126,"column":74},"end":{"line":126,"column":89}},"64":{"start":{"line":128,"column":4},"end":{"line":128,"column":22}},"65":{"start":{"line":129,"column":4},"end":{"line":129,"column":23}},"66":{"start":{"line":130,"column":4},"end":{"line":130,"column":25}},"67":{"start":{"line":131,"column":4},"end":{"line":131,"column":27}},"68":{"start":{"line":132,"column":17},"end":{"line":132,"column":19}},"69":{"start":{"line":133,"column":4},"end":{"line":133,"column":49}},"70":{"start":{"line":135,"column":4},"end":{"line":148,"column":7}},"71":{"start":{"line":140,"column":22},"end":{"line":142,"column":36}},"72":{"start":{"line":143,"column":22},"end":{"line":144,"column":30}},"73":{"start":{"line":146,"column":8},"end":{"line":146,"column":19}},"74":{"start":{"line":147,"column":8},"end":{"line":147,"column":15}},"75":{"start":{"line":154,"column":0},"end":{"line":172,"column":2}},"76":{"start":{"line":155,"column":4},"end":{"line":171,"column":7}},"77":{"start":{"line":164,"column":22},"end":{"line":166,"column":36}},"78":{"start":{"line":167,"column":22},"end":{"line":167,"column":59}},"79":{"start":{"line":169,"column":8},"end":{"line":169,"column":19}},"80":{"start":{"line":170,"column":8},"end":{"line":170,"column":15}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":27},"end":{"line":9,"column":28}},"loc":{"start":{"line":9,"column":47},"end":{"line":28,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":21},"end":{"line":11,"column":22}},"loc":{"start":{"line":11,"column":31},"end":{"line":13,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":14},"end":{"line":15,"column":15}},"loc":{"start":{"line":15,"column":21},"end":{"line":19,"column":5}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":15},"end":{"line":20,"column":16}},"loc":{"start":{"line":20,"column":22},"end":{"line":23,"column":5}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":24,"column":14},"end":{"line":24,"column":15}},"loc":{"start":{"line":24,"column":20},"end":{"line":27,"column":5}},"line":24},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":20},"end":{"line":33,"column":21}},"loc":{"start":{"line":33,"column":40},"end":{"line":49,"column":1}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":36,"column":14},"end":{"line":36,"column":15}},"loc":{"start":{"line":36,"column":21},"end":{"line":40,"column":5}},"line":36},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":15},"end":{"line":41,"column":16}},"loc":{"start":{"line":41,"column":22},"end":{"line":44,"column":5}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":45,"column":14},"end":{"line":45,"column":15}},"loc":{"start":{"line":45,"column":20},"end":{"line":48,"column":5}},"line":45},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":22},"end":{"line":54,"column":23}},"loc":{"start":{"line":54,"column":42},"end":{"line":69,"column":1}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":56,"column":14},"end":{"line":56,"column":15}},"loc":{"start":{"line":56,"column":23},"end":{"line":60,"column":5}},"line":56},"11":{"name":"(anonymous_11)","decl":{"start":{"line":61,"column":15},"end":{"line":61,"column":16}},"loc":{"start":{"line":61,"column":22},"end":{"line":64,"column":5}},"line":61},"12":{"name":"(anonymous_12)","decl":{"start":{"line":65,"column":14},"end":{"line":65,"column":15}},"loc":{"start":{"line":65,"column":20},"end":{"line":68,"column":5}},"line":65},"13":{"name":"(anonymous_13)","decl":{"start":{"line":74,"column":19},"end":{"line":74,"column":20}},"loc":{"start":{"line":74,"column":39},"end":{"line":92,"column":1}},"line":74},"14":{"name":"(anonymous_14)","decl":{"start":{"line":77,"column":14},"end":{"line":77,"column":15}},"loc":{"start":{"line":77,"column":24},"end":{"line":83,"column":5}},"line":77},"15":{"name":"(anonymous_15)","decl":{"start":{"line":84,"column":15},"end":{"line":84,"column":16}},"loc":{"start":{"line":84,"column":22},"end":{"line":87,"column":5}},"line":84},"16":{"name":"(anonymous_16)","decl":{"start":{"line":88,"column":14},"end":{"line":88,"column":15}},"loc":{"start":{"line":88,"column":20},"end":{"line":91,"column":5}},"line":88},"17":{"name":"(anonymous_17)","decl":{"start":{"line":97,"column":19},"end":{"line":97,"column":20}},"loc":{"start":{"line":97,"column":39},"end":{"line":117,"column":1}},"line":97},"18":{"name":"(anonymous_18)","decl":{"start":{"line":99,"column":14},"end":{"line":99,"column":15}},"loc":{"start":{"line":99,"column":25},"end":{"line":104,"column":5}},"line":99},"19":{"name":"(anonymous_19)","decl":{"start":{"line":105,"column":14},"end":{"line":105,"column":15}},"loc":{"start":{"line":105,"column":20},"end":{"line":108,"column":5}},"line":105},"20":{"name":"(anonymous_20)","decl":{"start":{"line":109,"column":15},"end":{"line":109,"column":16}},"loc":{"start":{"line":109,"column":22},"end":{"line":112,"column":5}},"line":109},"21":{"name":"(anonymous_21)","decl":{"start":{"line":113,"column":14},"end":{"line":113,"column":15}},"loc":{"start":{"line":113,"column":20},"end":{"line":116,"column":5}},"line":113},"22":{"name":"(anonymous_22)","decl":{"start":{"line":123,"column":25},"end":{"line":123,"column":26}},"loc":{"start":{"line":123,"column":45},"end":{"line":149,"column":1}},"line":123},"23":{"name":"(anonymous_23)","decl":{"start":{"line":140,"column":14},"end":{"line":140,"column":15}},"loc":{"start":{"line":140,"column":22},"end":{"line":142,"column":36}},"line":140},"24":{"name":"(anonymous_24)","decl":{"start":{"line":143,"column":15},"end":{"line":143,"column":16}},"loc":{"start":{"line":143,"column":22},"end":{"line":144,"column":30}},"line":143},"25":{"name":"(anonymous_25)","decl":{"start":{"line":145,"column":14},"end":{"line":145,"column":15}},"loc":{"start":{"line":145,"column":20},"end":{"line":148,"column":5}},"line":145},"26":{"name":"(anonymous_26)","decl":{"start":{"line":154,"column":26},"end":{"line":154,"column":27}},"loc":{"start":{"line":154,"column":46},"end":{"line":172,"column":1}},"line":154},"27":{"name":"(anonymous_27)","decl":{"start":{"line":164,"column":14},"end":{"line":164,"column":15}},"loc":{"start":{"line":164,"column":22},"end":{"line":166,"column":36}},"line":164},"28":{"name":"(anonymous_28)","decl":{"start":{"line":167,"column":15},"end":{"line":167,"column":16}},"loc":{"start":{"line":167,"column":22},"end":{"line":167,"column":59}},"line":167},"29":{"name":"(anonymous_29)","decl":{"start":{"line":168,"column":14},"end":{"line":168,"column":15}},"loc":{"start":{"line":168,"column":20},"end":{"line":171,"column":5}},"line":168}},"branchMap":{"0":{"loc":{"start":{"line":100,"column":28},"end":{"line":100,"column":54}},"type":"binary-expr","locations":[{"start":{"line":100,"column":28},"end":{"line":100,"column":48}},{"start":{"line":100,"column":52},"end":{"line":100,"column":54}}],"line":100},"1":{"loc":{"start":{"line":101,"column":32},"end":{"line":101,"column":62}},"type":"binary-expr","locations":[{"start":{"line":101,"column":32},"end":{"line":101,"column":56}},{"start":{"line":101,"column":60},"end":{"line":101,"column":62}}],"line":101},"2":{"loc":{"start":{"line":102,"column":28},"end":{"line":102,"column":54}},"type":"binary-expr","locations":[{"start":{"line":102,"column":28},"end":{"line":102,"column":48}},{"start":{"line":102,"column":52},"end":{"line":102,"column":54}}],"line":102},"3":{"loc":{"start":{"line":124,"column":18},"end":{"line":124,"column":55}},"type":"binary-expr","locations":[{"start":{"line":124,"column":18},"end":{"line":124,"column":47}},{"start":{"line":124,"column":51},"end":{"line":124,"column":55}}],"line":124},"4":{"loc":{"start":{"line":125,"column":11},"end":{"line":125,"column":44}},"type":"binary-expr","locations":[{"start":{"line":125,"column":11},"end":{"line":125,"column":39}},{"start":{"line":125,"column":43},"end":{"line":125,"column":44}}],"line":125},"5":{"loc":{"start":{"line":126,"column":74},"end":{"line":126,"column":89}},"type":"binary-expr","locations":[{"start":{"line":126,"column":74},"end":{"line":126,"column":83}},{"start":{"line":126,"column":87},"end":{"line":126,"column":89}}],"line":126},"6":{"loc":{"start":{"line":133,"column":20},"end":{"line":133,"column":48}},"type":"cond-expr","locations":[{"start":{"line":133,"column":42},"end":{"line":133,"column":43}},{"start":{"line":133,"column":46},"end":{"line":133,"column":48}}],"line":133}},"s":{"0":3,"1":3,"2":3,"3":3,"4":9,"5":9,"6":11,"7":9,"8":8,"9":8,"10":8,"11":0,"12":0,"13":8,"14":8,"15":3,"16":1,"17":1,"18":1,"19":1,"20":1,"21":0,"22":0,"23":1,"24":1,"25":3,"26":1,"27":1,"28":1,"29":1,"30":0,"31":0,"32":1,"33":1,"34":3,"35":1,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":0,"43":0,"44":1,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":0,"55":0,"56":1,"57":1,"58":3,"59":1,"60":1,"61":1,"62":1,"63":1,"64":1,"65":1,"66":1,"67":1,"68":1,"69":1,"70":1,"71":1,"72":0,"73":1,"74":1,"75":3,"76":0,"77":0,"78":0,"79":0,"80":0},"f":{"0":9,"1":11,"2":8,"3":0,"4":8,"5":1,"6":1,"7":0,"8":1,"9":1,"10":1,"11":0,"12":1,"13":1,"14":1,"15":0,"16":1,"17":1,"18":1,"19":1,"20":0,"21":1,"22":1,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0},"b":{"0":[1,0],"1":[1,0],"2":[1,0],"3":[1,0],"4":[1,1],"5":[1,0],"6":[1,0]},"inputSourceMap":{"version":3,"file":"order.js","sourceRoot":"","sources":["order.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport * as async from \"async\";\r\nimport * as request from \"request\";\r\nimport * as graph from \"fbgraph\";\r\nimport * as assert from \"assert\";\r\nimport { Response, Request, NextFunction } from \"express\";\r\nimport { default as Order, OrderModel } from \"../models/Order\";\r\nimport { IVerifyOptions } from \"passport-local\";\r\nimport { WriteError } from \"mongodb\";\r\nimport { Document } from \"mongoose\";\r\n\r\n/**\r\n * POST /api/importorders\r\n * Imports the data into DB.\r\n */\r\nexport let postImportOrders = (req: Request, res: Response, next: NextFunction) => {\r\n  const data: OrderModel[] = [];\r\n\r\n  req.body.forEach((elem: any) => {\r\n    data.push(elem);\r\n  });\r\n\r\n  Order.collection.insertMany(data)\r\n    .then(doc => {\r\n      assert.equal(data.length, doc.insertedCount);\r\n      res.status(200);\r\n      res.write(\"OK\");\r\n    })\r\n    .catch(err => {\r\n      res.status(500);\r\n      res.write(err.toString());\r\n    })\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n\r\n};\r\n\r\n\r\n/**\r\n * POST /api/order/:id\r\n * Creates an order.\r\n */\r\nexport let postOrder = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  const data: OrderModel = req.body;\r\n\r\n  Order.collection.insertOne(data)\r\n    .then(doc => {\r\n      assert.equal(1, doc.insertedCount);\r\n      res.status(200);\r\n      res.write(\"OK\");\r\n    })\r\n    .catch(err => {\r\n      res.status(500);\r\n      res.write(err.toString());\r\n    })\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n/**\r\n * DELETE /api/order/1\r\n * Deletes an order by Id.\r\n */\r\nexport let deleteOrder = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  Order.remove({ orderId: req.params.id })\r\n    .then((doc: any) => {\r\n      assert.equal(doc.result.n, 1, \"No suitable orders found\");\r\n      res.status(200);\r\n      res.write(\"OK\");\r\n    })\r\n    .catch(err => {\r\n      res.status(500);\r\n      res.write(err.toString());\r\n    })\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n/**\r\n * GET /api/order/1\r\n * GETs an order by id.\r\n */\r\nexport let getOrder = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  const orderId = parseInt(req.params.id);\r\n\r\n  Order.findOne({ orderId: orderId }, ).exec()\r\n    .then((data: OrderModel) => {\r\n      assert.notEqual(data, undefined, \"No order found\");\r\n      data.orderId = orderId;\r\n      res.status(200);\r\n      res.contentType(\"application/json\");\r\n      res.write(JSON.stringify(data));\r\n    })\r\n    .catch(err => {\r\n      res.status(500);\r\n      res.write(err.toString());\r\n    })\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n/**\r\n * PATCH /api/order/\r\n * Updates an order.\r\n */\r\nexport let putOrder = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  Order.findOne({ orderId: parseInt(req.body.orderId) }).exec()\r\n    .then((order: OrderModel) => {\r\n      order.companyName = req.body.companyName || \"\";\r\n      order.customerAddress = req.body.customerAddress || \"\";\r\n      order.orderedItem = req.body.orderedItem || \"\";\r\n      return order.save();\r\n    })\r\n    .then(() => {\r\n      res.status(200);\r\n      res.write(\"OK\");\r\n    })\r\n    .catch(err => {\r\n      res.status(500);\r\n      res.write(err.toString());\r\n    })\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n/**\r\n * GET /api/order/\r\n * Searches for orders.\r\n * Example: http://localhost:3000/api/order/?sortKey=orderId&sortOrder=asc&skip=0&limit=1000&$where=this.companyName==='Tic-tac4'%26%26this.orderId>=112\r\n */\r\nexport let getOrderSearch = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  const limit = parseInt(req.query.limit, 10) || 1000, // default limit to 1000 docs.\r\n    skip = parseInt(req.query.skip, 10) || 0, // default skip to 0 docs\r\n    sortKey = req.query.sortKey,\r\n    sortOrder = req.query.sortOrder,\r\n    query = req.query || {};\r\n\r\n  // remove skip and limit from query to avoid false querying\r\n  delete query.skip;\r\n  delete query.limit;\r\n  delete query.sortKey;\r\n  delete query.sortOrder;\r\n\r\n  const sort: any = {};\r\n  sort[sortKey] = sortOrder === \"asc\" ? 1 : -1;\r\n  // find data and get (with optional query, skip and limit)\r\n  Order.find(query)\r\n    .sort(sort)\r\n    .skip(skip)\r\n    .limit(limit)\r\n    .exec()\r\n    .then(docs => res.status(200)\r\n      .set(\"Content-Type\", \"application/json\")\r\n      .write(JSON.stringify(docs)))\r\n    .catch(err => res.status(500)\r\n      .write(err.toString()))\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n/**\r\n * GET /api/order/ordersCountPerItem/\r\n * Calculates how often each item has been ordered, in descending order.\r\n */\r\nexport let getCountPerItem = (req: Request, res: Response, next: NextFunction) => {\r\n\r\n  Order.aggregate(\r\n    [\r\n      {\r\n        $group: {\r\n          _id: \"$orderedItem\",\r\n          count: { $sum: 1 }\r\n        }\r\n      },\r\n      { $sort: { count: -1 } },\r\n    ]\r\n  )\r\n    .then(docs => res.status(200)\r\n      .set(\"Content-Type\", \"application/json\")\r\n      .write(JSON.stringify(docs)))\r\n    .catch(err => res.status(500).write(err.toString()))\r\n    .then(() => {\r\n      res.send();\r\n      next();\r\n    });\r\n};\r\n\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"41c7eb83e0c7703d268b54bcb2228adcc0a792ff"}
,"D:\\Projects\\_BorderGuru\\ts\\src\\models\\Order.ts": {"path":"D:\\Projects\\_BorderGuru\\ts\\src\\models\\Order.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":20},"end":{"line":9,"column":24}},"3":{"start":{"line":11,"column":14},"end":{"line":11,"column":50}},"4":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":4,"1":4,"2":4,"3":4,"4":4},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"Order.js","sourceRoot":"","sources":["Order.ts"],"names":[],"mappings":";;AAAA,qCAAqC;AASrC,MAAM,WAAW,GAAG,IAAI,QAAQ,CAAC,MAAM,CAAC;IACtC,OAAO,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvE,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC7C,eAAe,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACjD,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;CAE9C,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;AAEzB,mFAAmF;AACnF,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;AACnD,kBAAe,KAAK,CAAC","sourcesContent":["import * as mongoose from \"mongoose\";\r\n\r\nexport type OrderModel = mongoose.Document & {\r\n  orderId: Number,\r\n  companyName: string,\r\n  customerAddress: string,\r\n  orderedItem: string,\r\n};\r\n\r\nconst orderSchema = new mongoose.Schema({\r\n  orderId: { type: Number, unique: true, required: true, dropDups: true },\r\n  companyName: { type: String, required: true },\r\n  customerAddress: { type: String, required: true },\r\n  orderedItem: { type: String, required: true }\r\n\r\n}, { timestamps: true });\r\n\r\n// export const Order: OrderType = mongoose.model<OrderType>('Order', orderSchema);\r\nconst Order = mongoose.model(\"Order\", orderSchema);\r\nexport default Order;"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"1d0cf52971c75d9a670a90bef2d66184ab45a679"}
}
